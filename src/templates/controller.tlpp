#include 'tlpp-core.th'

Namespace namespace.nomedocomponente
Using Namespace namespace.nomedocomponente.utils

Class NomedocomponenteController
   Data jResponse as Json
   Data oService  as Object

   Public Method new() as Object

   @Get(endpoint="/namespaceEndpoint/nomedocomponente/api/v1", description="Método GET do contexto Nomedocomponente")
   Public Method getNomedocomponente() as Logical

   @Delete("/namespaceEndpoint/nomedocomponente/api/v1/:id", description="Método DELETE do contexto Nomedocomponente")
   Public Method deleteNomedocomponente() as Logical

   @Put("/namespaceEndpoint/nomedocomponente/api/v1/:id", description="Método PUT do contexto Nomedocomponente")
   Public Method putNomedocomponente() as Logical

   @Post("/namespaceEndpoint/nomedocomponente/api/v1", description="Método POST do contexto Nomedocomponente")
   Public Method postNomedocomponente() as Logical
EndClass

Method new() as Object Class NomedocomponenteController
   ::oService  := NomedocomponenteService():new()
   ::jResponse := JsonObject():new()
Return self

Method getNomedocomponente() as Logical Class NomedocomponenteController
   oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
   oRest:setResponse(::oService:getNomedocomponente())
Return .T.

Method deleteNomedocomponente() as Logical Class NomedocomponenteController
   oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
   oRest:setResponse(::oService:deleteNomedocomponente(oRest:getPathParamsRequest()['id']))
Return .T.

Method putNomedocomponente() as Logical Class NomedocomponenteController
   Local cBody as Character
   Local jBody as Json

   oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')

   cBody := oRest:getBodyRequest()
   jBody := JsonObject():New()

   If jBody:FromJson(cBody) == Nil
      ::oService:putNomedocomponente(jBody)
   Else
      setRestFault(400, "Json inválido")
   EndIf
Return .T.

Method postNomedocomponente() as Logical Class NomedocomponenteController
   Local cBody as Character
   Local jBody as Json

   oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')

   cBody := oRest:getBodyRequest()
   jBody := JsonObject():New()

   If jBody:FromJson(cBody) == Nil
      ::oService:postNomedocomponente(jBody)
   Else
      setRestFault(400, "Json inválido")
   EndIf
Return .T.
